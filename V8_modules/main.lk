/** ExportÃ© le 10/1/2025, 2:24:27 PM **/

/** 8.0/V8/main.lk **/

include('game_entity.lk')
include('field_map.lk')
include('item.lk')
include('fight_strategy.lk')

global _init = false
global fieldMap = null
global arsenal = null
global player = null
global strategy = null

if (!_init) {
    init()
    _init = true
}

main()

function init() {
    var ops1 = getOperations()
    player = Player(getCell())
    arsenal = new Arsenal();
    fieldMap = new FieldMap();


    if (player._magic > player._strength) {
        debug("Player seems to be a magic user.")
        strategy = new MagicStrategy();
    }
    else {
        debug("Player seems to be a physical user.")
        strategy = new StrengthStrategy();
    }

    strategy.turnOneBuffs()
    var ops2 = getOperations()
    debug("Init operations: " + (ops2 - ops1))
}

function main() {
    var ops1 = 0
    var ops2 = 0

    ops1 = getOperations()
    player.updateEntity()
    fieldMap.updateMapEntities()
    ops2 = getOperations()
    debug("Update entities operations: " + (ops2 - ops1))
    ops1 = getOperations()
    var target = fieldMap.getClosestEnemy()
    ops2 = getOperations()
    debug("Get closest enemy operations: " + (ops2 - ops1))

    ops1 = getOperations()
    fieldMap.buildHitMap(target._cellPos)
    ops2 = getOperations()
    debug("Build hit map operations: " + (ops2 - ops1))

    ops1 = getOperations()
    var targetHitCell = fieldMap.getClosestHighestDmgHitCell();
    ops2 = getOperations()
    debug("Get closest hit cell operations: " + (ops2 - ops1))
    debug("Target hit cell: " + targetHitCell._id + " Weapon: " + getWeaponName(targetHitCell._highestDamageWeapon._id))

    ops1 = getOperations()
    strategy.createAndExecuteScenario(target, targetHitCell)
    ops2 = getOperations()
    debug("Create and execute scenario operations: " + (ops2 - ops1))
}

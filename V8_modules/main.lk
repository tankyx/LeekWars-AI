
include('game_entity.lk')
include('field_map.lk')
include('item.lk')
include('strategy/action.lk')
include('strategy/base_strategy.lk')
include('strategy/strength_strategy.lk')
include('strategy/magic_strategy.lk')
include('strategy/agility_strategy.lk')
include('strategy/boss_strategy.lk')

global _init = false
global fieldMap = null
global arsenal = null
global player = null
global strategy = null

if (!_init) {
    init()
    _init = true
}

main()

function init() {
    var ops1 = getOperations()
    player = Player(getCell())
    arsenal = new Arsenal();
    fieldMap = new FieldMap();

    // Check if this is a boss fight first
    if (BossFightStrategy.detectBossFight()) {
        debug("Boss fight detected! Using BossFightStrategy")
        strategy = new BossFightStrategy();
    }
    else if (player._agility > player._strength && player._agility > player._magic) {
        debug("Player is agility-focused (agility: " + player._agility + ", strength: " + player._strength + ", magic: " + player._magic + ")")
        strategy = new AgilityStrategy();
    }
    else if (player._magic > player._strength) {
        debug("Player seems to be a magic user.")
        strategy = new MagicStrategy();
    }
    else {
        debug("Player seems to be a physical user.")
        strategy = new StrengthStrategy();
    }

    strategy.turnOneBuffs()
    var ops2 = getOperations()
    debugC("Init operations: " + (ops2 - ops1), COLOR_GREEN)
}

function main() {
    var ops1 = 0
    var ops2 = 0

    ops1 = getOperations()
    player.updateEntity()
    fieldMap.updateMapEntities()
    ops2 = getOperations()
    debugC("Update entities operations: " + (ops2 - ops1), COLOR_GREEN)
    ops1 = getOperations()
    var target = fieldMap.getClosestEnemy()
    ops2 = getOperations()
    debugC("Get closest enemy operations: " + (ops2 - ops1), COLOR_GREEN)

    ops1 = getOperations()
    fieldMap.buildHitMap(target._cellPos)
    ops2 = getOperations()
    debugC("Build hit map operations: " + (ops2 - ops1), COLOR_GREEN)

    ops1 = getOperations()
    var targetHitCell = fieldMap.getBestWeaponOrChipCell();
    ops2 = getOperations()
    debugC("Get closest hit cell operations: " + (ops2 - ops1), COLOR_GREEN)
    if (targetHitCell != null && targetHitCell != -1) {
        debug("Target hit cell: " + targetHitCell._id + " Weapon: " + getWeaponName(targetHitCell._highestDamageWeapon._id))
    } else {
        debug("No valid attack cell found")
    }

    ops1 = getOperations()
    if (strategy instanceof MagicStrategy) {
        strategy.createAndExecuteDotKite(target, targetHitCell)
    } else {
        strategy.createAndExecuteScenario(target, targetHitCell)
    }
    ops2 = getOperations()
    debugC("Create and execute scenario operations: " + (ops2 - ops1), COLOR_GREEN)
}
